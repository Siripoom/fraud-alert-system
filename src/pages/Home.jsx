import { useEffect, useState } from "react";
import { Input, Row, Col, Typography, Button } from "antd";
import { getReportApprove } from "../services/reportService";
import Navbar from "../components/Navbar";
import ReportCard from "../components/ReportCard";

const { Title } = Typography;
const { Search } = Input;

function Home() {
  const [reports, setReports] = useState([]);
  const [filteredReports, setFilteredReports] = useState([]);
  const [searchTerm, setSearchTerm] = useState("");

  useEffect(() => {
    fetchReports();
  }, []);

  const fetchReports = async () => {
    try {
      const data = await getReportApprove();
      setReports(data);
      setFilteredReports(data); // Initialize filtered list with all reports
    } catch (error) {
      console.error(error);
    }
  };

  // üîπ Handle Search Input Change
  const handleSearch = (value) => {
    setSearchTerm(value);
    if (!value) {
      setFilteredReports(reports); // Reset to all reports when search is empty
    } else {
      const filtered = reports.filter((report) => {
        const fraudName = report.fraud_name
          ? report.fraud_name.toLowerCase()
          : "";
        const fraudBankAccount = report.fraud_bank_account
          ? report.fraud_bank_account
          : "";

        return (
          fraudName.includes(value.toLowerCase()) ||
          fraudBankAccount.includes(value)
        );
      });

      setFilteredReports(filtered);
    }
  };

  return (
    <>
      <Navbar />
      <div
        style={{
          backgroundColor: "#EEEEEE", // ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏≠‡πà‡∏≠‡∏ô
          minHeight: "100vh",
        }}
      >
        {/* Hero Section */}
        <div
          style={{
            backgroundColor: "#8E1616", // ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡πà‡∏ß‡∏ô Hero
            padding: "20px",
            textAlign: "center",
            fontSize: "24px",
            fontWeight: "bold",
            color: "#FFFFFF", // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß
          }}
        >
          ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        </div>

        {/* Search Bar */}
        <div
          style={{
            maxWidth: "500px",
            margin: "20px auto",
            padding: "5px", // ‡∏•‡∏î padding ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
            borderRadius: "8px", // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏∏‡∏°‡πÇ‡∏Ñ‡πâ‡∏á‡∏°‡∏ô
            boxShadow: "0px 4px 10px rgba(0, 0, 0, 0.1)", // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏≤‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
            backgroundColor: "#fff", // ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          }}
        >
          <Search
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ"
            allowClear
            enterButton="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"
            size="large"
            onSearch={handleSearch}
            style={{
              borderColor: "#8E1616", // ‡∏Å‡∏£‡∏≠‡∏ö‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏Ç‡πâ‡∏°
              borderRadius: "8px", // ‡∏°‡∏∏‡∏°‡πÇ‡∏Ñ‡πâ‡∏á‡∏°‡∏ô
              backgroundColor: "#FFFFFF", // ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß
              padding: "10px 15px", // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î padding ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
              boxShadow: "none", // ‡∏•‡∏ö‡πÄ‡∏á‡∏≤‡∏≠‡∏≠‡∏Å
            }}
            onFocus={(e) => {
              e.target.style.borderColor = "#D84040"; // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏µ‡πâ‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏≠‡πà‡∏≠‡∏ô
              e.target.parentNode.style.borderColor = "#D84040"; // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏µ‡πâ‡πÄ‡∏°‡∏≤‡∏™‡πå‡∏Å‡∏£‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢
            }}
            onBlur={(e) => {
              e.target.style.borderColor = "#8E1616"; // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏¥‡∏Å‡∏ä‡∏µ‡πâ‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥
              e.target.parentNode.style.borderColor = "#8E1616"; // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏¥‡∏Å‡∏ä‡∏µ‡πâ‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥
            }}
          />
        </div>

        {/* Grid for Reports */}
        <div style={{ padding: "20px", maxWidth: "1200px", margin: "auto" }}>
          <Row gutter={[16, 16]}>
            {filteredReports.length > 0 ? (
              filteredReports.map((report) => (
                <Col xs={24} sm={12} md={8} lg={6} key={report.report_id}>
                  <ReportCard report={report} />
                </Col>
              ))
            ) : (
              <p style={{ textAlign: "center", width: "100%" }}>
                ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
              </p>
            )}
          </Row>
        </div>
      </div>
    </>
  );
}

export default Home;
